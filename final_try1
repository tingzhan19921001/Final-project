import matplotlib.pyplot as plt
import numpy as np
import pandas as pd


def PopulationbyAge(self):
    """
    This function aims to get the population in specific area.
    The source is : https://suburbanstats.org/population/illinois/how-many-people-live-in-champaign
    The percentage distribution by age: https://www.statista.com/statistics/748601/walmartcom-us-shopping-frequency-by-age/

    :return:
    """
def ReadcsvTodf(input_file):

    #input_file = input('Give me a file')
    df = pd.read_csv(input_file)

    years = np.array(df['Year'])
    list_years = list(df.axes[0])
    total_rows = len(list_years)
    #print(total_rows)
    return df,total_rows
#ReadcsvTodf()

def NumberofPeopleShopWalmart():

    df, total_rows = ReadcsvTodf('test.csv')
    print(df)
    print(total_rows)

    years_to_num = np.arange(1,20)

    print(years_to_num)

    population = np.array(df['Population'])

    p1 = np.polyfit(years_to_num, population,1)
    p2 = np.polyfit(years_to_num, population, 2)
    p3 = np.polyfit(years_to_num, population, 3)

    #print('The conversion rate is: ', p1[0])
    plt.plot(years_to_num,population,'o')

    plt.plot(years_to_num, np.polyval(p1,years_to_num),'r-')
    plt.plot(years_to_num, np.polyval(p2, years_to_num), 'b-')
    plt.plot(years_to_num, np.polyval(p3, years_to_num), 'g-')

    #after obeservation, p3 fit the graph most
    #print(p3)

    next_year_num = 20
    line = np.poly1d(p3)
    next_population = line(next_year_num)

    print('Number of people living in households that shopped at Walmart Supercenter grocery stores \n within the last 7 days in the United States from spring 2008 to spring 2017 (in millions)',next_population)
    #print(population)
    return next_population

NumberofPeopleShopWalmart()

def NumberofHousehold():
    """
    This function will get how many Number of household in US.

    :return:
    """

class Income():
    """
    Income = Number of Sales(S) * Profit per Sale(p)

    """

    def __init__(self,number_of_sale, profit_per_sale):

        self.number_of_sale = number_of_sale
        self.profit_per_sale = profit_per_sale

    def NumberSale(self,customer_volume, ConversionRate):
        """

        :return:
        """
        number_of_sale = customer_volume * ConversionRate
        return number_of_sale


    def ProfitperSale(self,cost_of_goodsold):
        """
        :return:

        >>> Income.ProfitperSale(Income, 200)
        60.0
        """
        profit_per_sale = 0.3 * cost_of_goodsold
        return profit_per_sale

